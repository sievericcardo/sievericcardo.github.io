pub_date	title	venue	excerpt	citation	url_slug	paper_url	slides_url
2024-04-01	GreenhouseDT: An Exemplar for Digital Twins	Proc. 19th Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS 2024). © IEEE/ACM 2024.	Digital twins, which are increasingly adopted in industry, are model-centric systems used to improve the behavior of a twinned physical system. Seen as a whole, this system has several layers of self-adaptation: first, the digital twin manages its physical counterpart and maintains its models through a feedback loop to, e.g., fine-tune model parameters. Second, the digital twin needs to deal with unforeseen changes in the composition of the physical system, which require models to be partly replaced or recomposed. To facilitate research on self-adaptive digital twins, without requiring access to industrial production systems, this paper presents GreenhouseDT, an exemplar that explicitly separates these layers of self-adaptation. GreenhouseDT provides an extensible software architecture for a digital twin of a simple, low-cost greenhouse, in which plants, sensors and water pumps constitute the physical system. GreenhouseDT includes an asset model in the digital twin’s knowledge base and uses reflection to lift twinned configurations into the knowledge base. We discuss how GreenhouseDT can be extended with different digital twin capabilities, demonstrated by the addition of plant health monitoring and model-based control.	1(1).	24-seams	http://academicpages.github.io/files/24-seams.pdf	
2024-10-01	Semantic Reflection and Digital Twins: A Comprehensive Overview	The Combined Power of Research, Education and Dissemination. LNCS 15240, Springer 2024.	Semantic reflection combines reflection in programming languages with semantic technologies for knowledge representation. It enables a program to represent and query its own runtime state as a knowledge graph. The knowledge graphs reflecting program states can be combined with domain knowledge which allows queries about a program to be made in terms of a given domain vocabulary, as well as with external graph data. Both extensions of the knowledge graph reflecting the run-time state are useful for digital twins. In this paper, we discuss the basic concepts of semantic reflection, its applications for digital twins, and its connections to formal methods.	1(2).	24-tiziana	http://academicpages.github.io/files/24-tiziana.pdf	
2025-05-01	BedreFlyt: Improving Patient Flows through Hospital Wards with Digital Twins	1st International Workshop on Autonomous System Quality Assurance and Prediction with Digital Twins (ASQAP 2025). EPTCS 2025.	Digital twins are emerging as a valuable tool for short-term decision-making as well as for long-term strategic planning across numerous domains, including process industry, energy, space, transport, and healthcare. This paper reports on our ongoing work on designing a digital twin to enhance resource planning, e.g., for the in-patient ward needs in hospitals. By leveraging executable formal models for system exploration, ontologies for knowledge representation and an SMT solver for constraint satisfiability, our approach aims to explore hypothetical “what-if” scenarios to improve strategic planning processes, as well as to solve concrete, short-term decision-making tasks. Our proposed solution uses the executable formal model to turn a stream of arriving patients, that need to be hospitalized, into a stream of optimization problems, e.g., capturing daily inpatient ward needs, that can be solved by SMT techniques. The knowledge base, which formalizes domain knowledge, is used to model the needed configuration in the digital twin, allowing the twin to support both short-term decision-making and long-term strategic planning by generating scenarios spanning average-case as well as worst-case resource needs, depending on the expected treatment of patients, as well as ranging over variations in available resources, e.g., bed distribution in different rooms. We illustrate our digital twin architecture by considering the problem of bed bay allocation in a hospital ward.	1(3).	25-asqap	http://academicpages.github.io/files/25-asqap.pdf	http://academicpages.github.io/files/asqap2025-bedreflyt-slides.pdf
2025-07-01	Declarative Dynamic Object Reclassification	Proc. 39th European Conference on Object-Oriented Programming (ECOOP 2025). LIPIcs 333. Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik 2025.	In object-oriented languages, dynamic object reclassification is a technique to change the class binding of an object at runtime. Current approaches express when and how to reclassify inside the program’s business code, while maintaining internal consistency. These approaches are less suited for programs that need to be consistent with an external context, such as autonomous systems interacting with a knowledge base. This paper proposes declarative dynamic object reclassification, a novel technique that provides a separation of concerns between a program’s business code and its adaptation logic for reclassification, expressed via a knowledge base. We present Featherweight Semantically Reflected Java, a minimal calculus for declarative dynamic object reclassification that enables the programmer to define consistency both internally (using a type system) and externally (using declarative classification queries). We use this calculus to study how internal and external consistency interact for declarative dynamic object reclassification. We further implement the technique by extending SMOL, a language for reflective programming via external knowledge bases.	1(4).	25-ecoop	http://academicpages.github.io/files/25-ecoop.pdf	
2025-08-30	What-If Scenarios for the BedreFlyt Digital Twin	In: Principles of Formal Quantitative Analysis. LNCS 15760. © Springer 2025.	Digital twin technology is emerging as a valuable tool for both short-term decision-making and long-term strategic planning across domains such as process industry, energy, space, transport, and healthcare. This paper reports on ongoing work in designing a digital twin to enhance resource planning in hospitals, e.g., for in-patient needs. Our focus here is on a novel technique to express what-if scenarios in digital twins to improve strategic planning processes, spanning, e.g., average-case and worst-case resource needs, expected patient treatments, and ranging over variations in available resources such as bed bays in the hospital ward. Due to the modularity of our digital twin architecture, different what-if scenarios can be explored simply by configuring the digital twin’s orchestrator, which triggers a formal methods analysis pipeline that combines executable formal models for simulation, optimization over constraints and a knowledge base that formalizes domain knowledge. We illustrate what-if scenario analysis in our digital twin architecture by considering the problem of bed bay allocation in a hospital ward.	1(4).	25-christel	http://academicpages.github.io/files/25-christel.pdf	